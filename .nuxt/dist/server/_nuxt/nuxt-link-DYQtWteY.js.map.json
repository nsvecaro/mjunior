{"file":"nuxt-link-DYQtWteY.js","mappings":"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","names":["firstNonUndefined","args","arg","defineNuxtLink","options","componentName","isHashLinkWithoutHashMode","link","resolveTrailingSlashBehavior","to","resolve","trailingSlash","effectiveTrailingSlash","applyTrailingSlashBehavior","path","useNuxtLink","props","router","useRouter","config","useRuntimeConfig","hasTarget","computed","isAbsoluteUrl","hasProtocol","builtinRouterLink","resolveComponent","useBuiltinLink","isExternal","href","resolveRouteObject","href2","_a","joinURL","_e","navigateTo","defineComponent","slots","navigate","shallowRef","el","elRef","prefetch","nuxtApp","useNuxtApp","routerLinkProps","h","target","rel","url","parseQuery","event","__nuxt_component_0","nuxtLinkDefaults","normalizeFn","withTrailingSlash","withoutTrailingSlash"],"sources":["../../../../node_modules/nuxt/dist/app/components/nuxt-link.js"],"sourcesContent":["import { computed, defineComponent, h, inject, onBeforeUnmount, onMounted, provide, ref, resolveComponent, shallowRef } from \"vue\";\nimport { hasProtocol, joinURL, parseQuery, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { preloadRouteComponents } from \"../composables/preload.js\";\nimport { onNuxtReady } from \"../composables/ready.js\";\nimport { navigateTo, resolveRouteObject, useRouter } from \"../composables/router.js\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { cancelIdleCallback, requestIdleCallback } from \"../compat/idle-callback.js\";\nimport { nuxtLinkDefaults } from \"#build/nuxt.config.mjs\";\nimport { hashMode } from \"#build/router.options\";\nconst firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);\nconst NuxtLinkDevKeySymbol = Symbol(\"nuxt-link-dev-key\");\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtLink(options) {\n  const componentName = options.componentName || \"NuxtLink\";\n  function checkPropConflicts(props, main, sub) {\n    if (import.meta.dev && props[main] !== void 0 && props[sub] !== void 0) {\n      console.warn(`[${componentName}] \\`${main}\\` and \\`${sub}\\` cannot be used together. \\`${sub}\\` will be ignored.`);\n    }\n  }\n  function isHashLinkWithoutHashMode(link) {\n    return !hashMode && typeof link === \"string\" && link.startsWith(\"#\");\n  }\n  function resolveTrailingSlashBehavior(to, resolve, trailingSlash) {\n    const effectiveTrailingSlash = trailingSlash ?? options.trailingSlash;\n    if (!to || effectiveTrailingSlash !== \"append\" && effectiveTrailingSlash !== \"remove\") {\n      return to;\n    }\n    if (typeof to === \"string\") {\n      return applyTrailingSlashBehavior(to, effectiveTrailingSlash);\n    }\n    const path = \"path\" in to && to.path !== void 0 ? to.path : resolve(to).path;\n    const resolvedPath = {\n      ...to,\n      name: void 0,\n      // named routes would otherwise always override trailing slash behavior\n      path: applyTrailingSlashBehavior(path, effectiveTrailingSlash)\n    };\n    return resolvedPath;\n  }\n  function useNuxtLink(props) {\n    const router = useRouter();\n    const config = useRuntimeConfig();\n    const hasTarget = computed(() => !!props.target && props.target !== \"_self\");\n    const isAbsoluteUrl = computed(() => {\n      const path = props.to || props.href || \"\";\n      return typeof path === \"string\" && hasProtocol(path, { acceptRelative: true });\n    });\n    const builtinRouterLink = resolveComponent(\"RouterLink\");\n    const useBuiltinLink = builtinRouterLink && typeof builtinRouterLink !== \"string\" ? builtinRouterLink.useLink : void 0;\n    const isExternal = computed(() => {\n      if (props.external) {\n        return true;\n      }\n      const path = props.to || props.href || \"\";\n      if (typeof path === \"object\") {\n        return false;\n      }\n      return path === \"\" || isAbsoluteUrl.value;\n    });\n    const to = computed(() => {\n      checkPropConflicts(props, \"to\", \"href\");\n      const path = props.to || props.href || \"\";\n      if (isExternal.value) {\n        return path;\n      }\n      return resolveTrailingSlashBehavior(path, router.resolve, props.trailingSlash);\n    });\n    const link = isExternal.value ? void 0 : useBuiltinLink?.({ ...props, to });\n    const href = computed(() => {\n      const effectiveTrailingSlash = props.trailingSlash ?? options.trailingSlash;\n      if (!to.value || isAbsoluteUrl.value || isHashLinkWithoutHashMode(to.value)) {\n        return to.value;\n      }\n      if (isExternal.value) {\n        const path = typeof to.value === \"object\" && \"path\" in to.value ? resolveRouteObject(to.value) : to.value;\n        const href2 = typeof path === \"object\" ? router.resolve(path).href : path;\n        return applyTrailingSlashBehavior(href2, effectiveTrailingSlash);\n      }\n      if (typeof to.value === \"object\") {\n        return router.resolve(to.value)?.href ?? null;\n      }\n      return applyTrailingSlashBehavior(joinURL(config.app.baseURL, to.value), effectiveTrailingSlash);\n    });\n    return {\n      to,\n      hasTarget,\n      isAbsoluteUrl,\n      isExternal,\n      //\n      href,\n      isActive: link?.isActive ?? computed(() => to.value === router.currentRoute.value.path),\n      isExactActive: link?.isExactActive ?? computed(() => to.value === router.currentRoute.value.path),\n      route: link?.route ?? computed(() => router.resolve(to.value)),\n      async navigate(_e) {\n        await navigateTo(href.value, { replace: props.replace, external: isExternal.value || hasTarget.value });\n      }\n    };\n  }\n  return defineComponent({\n    name: componentName,\n    props: {\n      // Routing\n      to: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      href: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      // Attributes\n      target: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      rel: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      noRel: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Prefetching\n      prefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      prefetchOn: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      noPrefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Styling\n      activeClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      exactActiveClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      prefetchedClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Vue Router's `<RouterLink>` additional props\n      replace: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      ariaCurrentValue: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Edge cases handling\n      external: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Slot API\n      custom: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Behavior\n      trailingSlash: {\n        type: String,\n        default: void 0,\n        required: false\n      }\n    },\n    useLink: useNuxtLink,\n    setup(props, { slots }) {\n      const router = useRouter();\n      const { to, href, navigate, isExternal, hasTarget, isAbsoluteUrl } = useNuxtLink(props);\n      const prefetched = shallowRef(false);\n      const el = import.meta.server ? void 0 : ref(null);\n      const elRef = import.meta.server ? void 0 : (ref2) => {\n        el.value = props.custom ? ref2?.$el?.nextElementSibling : ref2?.$el;\n      };\n      function shouldPrefetch(mode) {\n        if (import.meta.server) {\n          return;\n        }\n        return !prefetched.value && (typeof props.prefetchOn === \"string\" ? props.prefetchOn === mode : props.prefetchOn?.[mode] ?? options.prefetchOn?.[mode]) && (props.prefetch ?? options.prefetch) !== false && props.noPrefetch !== true && props.target !== \"_blank\" && !isSlowConnection();\n      }\n      async function prefetch(nuxtApp = useNuxtApp()) {\n        if (import.meta.server) {\n          return;\n        }\n        if (prefetched.value) {\n          return;\n        }\n        prefetched.value = true;\n        const path = typeof to.value === \"string\" ? to.value : isExternal.value ? resolveRouteObject(to.value) : router.resolve(to.value).fullPath;\n        const normalizedPath = isExternal.value ? new URL(path, window.location.href).href : path;\n        await Promise.all([\n          nuxtApp.hooks.callHook(\"link:prefetch\", normalizedPath).catch(() => {\n          }),\n          !isExternal.value && !hasTarget.value && preloadRouteComponents(to.value, router).catch(() => {\n          })\n        ]);\n      }\n      if (import.meta.client) {\n        checkPropConflicts(props, \"prefetch\", \"noPrefetch\");\n        if (shouldPrefetch(\"visibility\")) {\n          const nuxtApp = useNuxtApp();\n          let idleId;\n          let unobserve = null;\n          onMounted(() => {\n            const observer = useObserver();\n            onNuxtReady(() => {\n              idleId = requestIdleCallback(() => {\n                if (el?.value?.tagName) {\n                  unobserve = observer.observe(el.value, async () => {\n                    unobserve?.();\n                    unobserve = null;\n                    await prefetch(nuxtApp);\n                  });\n                }\n              });\n            });\n          });\n          onBeforeUnmount(() => {\n            if (idleId) {\n              cancelIdleCallback(idleId);\n            }\n            unobserve?.();\n            unobserve = null;\n          });\n        }\n      }\n      if (import.meta.dev && import.meta.server && !props.custom) {\n        const isNuxtLinkChild = inject(NuxtLinkDevKeySymbol, false);\n        if (isNuxtLinkChild) {\n          console.log(\"[nuxt] [NuxtLink] You can't nest one <a> inside another <a>. This will cause a hydration error on client-side. You can pass the `custom` prop to take full control of the markup.\");\n        } else {\n          provide(NuxtLinkDevKeySymbol, true);\n        }\n      }\n      return () => {\n        if (!isExternal.value && !hasTarget.value && !isHashLinkWithoutHashMode(to.value)) {\n          const routerLinkProps = {\n            ref: elRef,\n            to: to.value,\n            activeClass: props.activeClass || options.activeClass,\n            exactActiveClass: props.exactActiveClass || options.exactActiveClass,\n            replace: props.replace,\n            ariaCurrentValue: props.ariaCurrentValue,\n            custom: props.custom\n          };\n          if (!props.custom) {\n            if (import.meta.client) {\n              if (shouldPrefetch(\"interaction\")) {\n                routerLinkProps.onPointerenter = prefetch.bind(null, void 0);\n                routerLinkProps.onFocus = prefetch.bind(null, void 0);\n              }\n              if (prefetched.value) {\n                routerLinkProps.class = props.prefetchedClass || options.prefetchedClass;\n              }\n            }\n            routerLinkProps.rel = props.rel || void 0;\n          }\n          return h(\n            resolveComponent(\"RouterLink\"),\n            routerLinkProps,\n            slots.default\n          );\n        }\n        const target = props.target || null;\n        checkPropConflicts(props, \"noRel\", \"rel\");\n        const rel = firstNonUndefined(\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`rel=\"\"`)\n          props.noRel ? \"\" : props.rel,\n          options.externalRelAttribute,\n          /*\n          * A fallback rel of `noopener noreferrer` is applied for external links or links that open in a new tab.\n          * This solves a reverse tabnapping security flaw in browsers pre-2021 as well as improving privacy.\n          */\n          isAbsoluteUrl.value || hasTarget.value ? \"noopener noreferrer\" : \"\"\n        ) || null;\n        if (props.custom) {\n          if (!slots.default) {\n            return null;\n          }\n          return slots.default({\n            href: href.value,\n            navigate,\n            prefetch,\n            get route() {\n              if (!href.value) {\n                return void 0;\n              }\n              const url = new URL(href.value, import.meta.client ? window.location.href : \"http://localhost\");\n              return {\n                path: url.pathname,\n                fullPath: url.pathname,\n                get query() {\n                  return parseQuery(url.search);\n                },\n                hash: url.hash,\n                params: {},\n                name: void 0,\n                matched: [],\n                redirectedFrom: void 0,\n                meta: {},\n                href: href.value\n              };\n            },\n            rel,\n            target,\n            isExternal: isExternal.value || hasTarget.value,\n            isActive: false,\n            isExactActive: false\n          });\n        }\n        return h(\"a\", {\n          ref: el,\n          href: href.value || null,\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`href=\"\"`)\n          rel,\n          target,\n          onClick: (event) => {\n            if (isExternal.value || hasTarget.value) {\n              return;\n            }\n            event.preventDefault();\n            return props.replace ? router.replace(href.value) : router.push(href.value);\n          }\n        }, slots.default?.());\n      };\n    }\n    // }) as unknown as DefineComponent<NuxtLinkProps, object, object, ComputedOptions, MethodOptions, object, object, EmitsOptions, string, object, NuxtLinkProps, object, SlotsType<NuxtLinkSlots>>\n  });\n}\nexport default /* @__PURE__ */ defineNuxtLink(nuxtLinkDefaults);\nfunction applyTrailingSlashBehavior(to, trailingSlash) {\n  const normalizeFn = trailingSlash === \"append\" ? withTrailingSlash : withoutTrailingSlash;\n  const hasProtocolDifferentFromHttp = hasProtocol(to) && !to.startsWith(\"http\");\n  if (hasProtocolDifferentFromHttp) {\n    return to;\n  }\n  return normalizeFn(to, true);\n}\nfunction useObserver() {\n  if (import.meta.server) {\n    return;\n  }\n  const nuxtApp = useNuxtApp();\n  if (nuxtApp._observer) {\n    return nuxtApp._observer;\n  }\n  let observer = null;\n  const callbacks = /* @__PURE__ */ new Map();\n  const observe = (element, callback) => {\n    observer ||= new IntersectionObserver((entries) => {\n      for (const entry of entries) {\n        const callback2 = callbacks.get(entry.target);\n        const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n        if (isVisible && callback2) {\n          callback2();\n        }\n      }\n    });\n    callbacks.set(element, callback);\n    observer.observe(element);\n    return () => {\n      callbacks.delete(element);\n      observer?.unobserve(element);\n      if (callbacks.size === 0) {\n        observer?.disconnect();\n        observer = null;\n      }\n    };\n  };\n  const _observer = nuxtApp._observer = {\n    observe\n  };\n  return _observer;\n}\nconst IS_2G_RE = /2g/;\nfunction isSlowConnection() {\n  if (import.meta.server) {\n    return;\n  }\n  const cn = navigator.connection;\n  if (cn && (cn.saveData || IS_2G_RE.test(cn.effectiveType))) {\n    return true;\n  }\n  return false;\n}\n"],"version":3}